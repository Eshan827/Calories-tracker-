<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Health & Fitness Tracker</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    :root {
      --primary: #4a6fa5;
      --secondary: #166088;
      --accent: #4fc3f7;
      --light: #f8f9fa;
      --dark: #343a40;
      --success: #28a745;
      --info: #17a2b8;
      --warning: #ffc107;
      --danger: #dc3545;
    }
    
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    body {
      background-color: #f5f7fa;
      color: #333;
      line-height: 1.6;
    }
    
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }
    
    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
      padding-bottom: 15px;
      border-bottom: 1px solid #ddd;
    }
    
    .app-title {
      display: flex;
      align-items: center;
      gap: 10px;
      color: var(--primary);
    }
    
    .app-title i {
      font-size: 1.8rem;
    }
    
    .date-display {
      font-size: 1.2rem;
      color: var(--secondary);
    }
    
    .dashboard {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 20px;
      margin-bottom: 30px;
    }
    
    .metric-card {
      background: white;
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      text-align: center;
    }
    
    .metric-card h3 {
      color: var(--secondary);
      margin-bottom: 10px;
    }
    
    .metric-value {
      font-size: 2rem;
      font-weight: bold;
      color: var(--primary);
    }
    
    .metric-unit {
      font-size: 1rem;
      color: #666;
    }
    
    .progress-container {
      margin-top: 10px;
      height: 10px;
      background: #e9ecef;
      border-radius: 5px;
      overflow: hidden;
    }
    
    .progress-bar {
      height: 100%;
      background: var(--accent);
      transition: width 0.3s ease;
    }
    
    .section {
      background: white;
      border-radius: 10px;
      padding: 20px;
      margin-bottom: 30px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .section-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      padding-bottom: 10px;
      border-bottom: 1px solid #eee;
    }
    
    .section-title {
      color: var(--secondary);
      display: flex;
      align-items: center;
      gap: 10px;
    }
    
    .meal-cards {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 20px;
      margin-bottom: 30px;
    }
    
    .meal-card {
      background: white;
      border-radius: 10px;
      padding: 15px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }
    
    .meal-card-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
      padding-bottom: 10px;
      border-bottom: 1px solid #eee;
    }
    
    .meal-name {
      font-weight: bold;
      color: var(--secondary);
    }
    
    .add-food-form {
      display: grid;
      grid-template-columns: 2fr 1fr 1fr 1fr 1fr auto;
      gap: 10px;
      margin-bottom: 15px;
      align-items: end;
    }
    
    .form-group {
      display: flex;
      flex-direction: column;
    }
    
    .form-group label {
      font-size: 0.8rem;
      color: #666;
      margin-bottom: 5px;
    }
    
    input, select {
      padding: 8px 12px;
      border: 1px solid #ddd;
      border-radius: 5px;
      font-size: 1rem;
    }
    
    button {
      padding: 8px 15px;
      border: none;
      border-radius: 5px;
      background-color: var(--primary);
      color: white;
      cursor: pointer;
      transition: background-color 0.3s;
    }
    
    button:hover {
      background-color: var(--secondary);
    }
    
    .btn-sm {
      padding: 5px 10px;
      font-size: 0.8rem;
    }
    
    .btn-success {
      background-color: var(--success);
    }
    
    .btn-info {
      background-color: var(--info);
    }
    
    .btn-warning {
      background-color: var(--warning);
      color: var(--dark);
    }
    
    .btn-danger {
      background-color: var(--danger);
    }
    
    .food-list {
      list-style: none;
    }
    
    .food-item {
      display: grid;
      grid-template-columns: 2fr 1fr 1fr 1fr 1fr auto;
      gap: 10px;
      padding: 10px 0;
      border-bottom: 1px solid #f0f0f0;
      align-items: center;
    }
    
    .food-item:last-child {
      border-bottom: none;
    }
    
    .food-name {
      font-weight: 500;
    }
    
    .nutrient-value {
      text-align: right;
    }
    
    .chart-container {
      position: relative;
      height: 300px;
      margin-top: 20px;
    }
    
    .water-tracker {
      display: flex;
      align-items: center;
      gap: 15px;
    }
    
    .water-buttons {
      display: flex;
      gap: 10px;
    }
    
    .water-button {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: var(--accent);
      color: white;
      cursor: pointer;
    }
    
    .weight-form {
      display: flex;
      gap: 10px;
      margin-bottom: 20px;
    }
    
    .history-table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }
    
    .history-table th, .history-table td {
      padding: 10px;
      text-align: left;
      border-bottom: 1px solid #eee;
    }
    
    .history-table th {
      background-color: #f8f9fa;
      color: var(--secondary);
    }
    
    .feedback-message {
      padding: 15px;
      border-radius: 5px;
      margin-top: 20px;
      background-color: #e8f5e9;
      color: #2e7d32;
      display: flex;
      align-items: center;
      gap: 10px;
    }
    
    @media (max-width: 768px) {
      .dashboard, .meal-cards {
        grid-template-columns: 1fr;
      }
      
      .add-food-form {
        grid-template-columns: 1fr;
      }
      
      .food-item {
        grid-template-columns: 1fr;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <header>
      <div class="app-title">
        <i class="fas fa-apple-alt"></i>
        <h1>Health & Fitness Tracker</h1>
      </div>
      <div class="date-display" id="current-date"></div>
    </header>
    
    <div class="dashboard">
      <div class="metric-card">
        <h3>Calories</h3>
        <div><span class="metric-value" id="total-calories">0</span> <span class="metric-unit">/ 2000 kcal</span></div>
        <div class="progress-container">
          <div class="progress-bar" id="calories-progress" style="width: 0%"></div>
        </div>
      </div>
      <div class="metric-card">
        <h3>Protein</h3>
        <div><span class="metric-value" id="total-protein">0</span> <span class="metric-unit">g</span></div>
      </div>
      <div class="metric-card">
        <h3>Water</h3>
        <div><span class="metric-value" id="water-intake">0</span> <span class="metric-unit">/ 2000 ml</span></div>
        <div class="progress-container">
          <div class="progress-bar" id="water-progress" style="width: 0%"></div>
        </div>
      </div>
      <div class="metric-card">
        <h3>Steps</h3>
        <div><span class="metric-value" id="step-count">0</span> <span class="metric-unit">steps</span></div>
      </div>
    </div>
    
    <div class="feedback-message" id="feedback-message">
      <i class="fas fa-info-circle"></i>
      <span id="feedback-text">Welcome! Start logging your health data.</span>
    </div>
    
    <section class="section">
      <div class="section-header">
        <h2 class="section-title"><i class="fas fa-utensils"></i> Food Tracker</h2>
      </div>
      
      <div class="meal-cards">
        <div class="meal-card" id="breakfast-card">
          <div class="meal-card-header">
            <span class="meal-name">Breakfast</span>
            <span class="meal-calories" id="breakfast-calories">0 kcal</span>
          </div>
          <div class="add-food-form">
            <div class="form-group">
              <label for="breakfast-food">Food</label>
              <input type="text" id="breakfast-food" placeholder="Food name">
            </div>
            <div class="form-group">
              <label for="breakfast-calories-input">Calories</label>
              <input type="number" id="breakfast-calories-input" placeholder="kcal">
            </div>
            <div class="form-group">
              <label for="breakfast-protein">Protein (g)</label>
              <input type="number" id="breakfast-protein" placeholder="g">
            </div>
            <div class="form-group">
              <label for="breakfast-carbs">Carbs (g)</label>
              <input type="number" id="breakfast-carbs" placeholder="g">
            </div>
            <div class="form-group">
              <label for="breakfast-fat">Fat (g)</label>
              <input type="number" id="breakfast-fat" placeholder="g">
            </div>
            <button class="btn-success btn-sm" onclick="addFood('breakfast')">Add</button>
          </div>
          <ul class="food-list" id="breakfast-list"></ul>
        </div>
        
        <div class="meal-card" id="lunch-card">
          <div class="meal-card-header">
            <span class="meal-name">Lunch</span>
            <span class="meal-calories" id="lunch-calories">0 kcal</span>
          </div>
          <div class="add-food-form">
            <div class="form-group">
              <label for="lunch-food">Food</label>
              <input type="text" id="lunch-food" placeholder="Food name">
            </div>
            <div class="form-group">
              <label for="lunch-calories-input">Calories</label>
              <input type="number" id="lunch-calories-input" placeholder="kcal">
            </div>
            <div class="form-group">
              <label for="lunch-protein">Protein (g)</label>
              <input type="number" id="lunch-protein" placeholder="g">
            </div>
            <div class="form-group">
              <label for="lunch-carbs">Carbs (g)</label>
              <input type="number" id="lunch-carbs" placeholder="g">
            </div>
            <div class="form-group">
              <label for="lunch-fat">Fat (g)</label>
              <input type="number" id="lunch-fat" placeholder="g">
            </div>
            <button class="btn-success btn-sm" onclick="addFood('lunch')">Add</button>
          </div>
          <ul class="food-list" id="lunch-list"></ul>
        </div>
        
        <div class="meal-card" id="dinner-card">
          <div class="meal-card-header">
            <span class="meal-name">Dinner</span>
            <span class="meal-calories" id="dinner-calories">0 kcal</span>
          </div>
          <div class="add-food-form">
            <div class="form-group">
              <label for="dinner-food">Food</label>
              <input type="text" id="dinner-food" placeholder="Food name">
            </div>
            <div class="form-group">
              <label for="dinner-calories-input">Calories</label>
              <input type="number" id="dinner-calories-input" placeholder="kcal">
            </div>
            <div class="form-group">
              <label for="dinner-protein">Protein (g)</label>
              <input type="number" id="dinner-protein" placeholder="g">
            </div>
            <div class="form-group">
              <label for="dinner-carbs">Carbs (g)</label>
              <input type="number" id="dinner-carbs" placeholder="g">
            </div>
            <div class="form-group">
              <label for="dinner-fat">Fat (g)</label>
              <input type="number" id="dinner-fat" placeholder="g">
            </div>
            <button class="btn-success btn-sm" onclick="addFood('dinner')">Add</button>
          </div>
          <ul class="food-list" id="dinner-list"></ul>
        </div>
        
        <div class="meal-card" id="snacks-card">
          <div class="meal-card-header">
            <span class="meal-name">Snacks</span>
            <span class="meal-calories" id="snacks-calories">0 kcal</span>
          </div>
          <div class="add-food-form">
            <div class="form-group">
              <label for="snacks-food">Food</label>
              <input type="text" id="snacks-food" placeholder="Food name">
            </div>
            <div class="form-group">
              <label for="snacks-calories-input">Calories</label>
              <input type="number" id="snacks-calories-input" placeholder="kcal">
            </div>
            <div class="form-group">
              <label for="snacks-protein">Protein (g)</label>
              <input type="number" id="snacks-protein" placeholder="g">
            </div>
            <div class="form-group">
              <label for="snacks-carbs">Carbs (g)</label>
              <input type="number" id="snacks-carbs" placeholder="g">
            </div>
            <div class="form-group">
              <label for="snacks-fat">Fat (g)</label>
              <input type="number" id="snacks-fat" placeholder="g">
            </div>
            <button class="btn-success btn-sm" onclick="addFood('snacks')">Add</button>
          </div>
          <ul class="food-list" id="snacks-list"></ul>
        </div>
      </div>
    </section>
    
    <section class="section">
      <div class="section-header">
        <h2 class="section-title"><i class="fas fa-tint"></i> Water Intake</h2>
      </div>
      <div class="water-tracker">
        <div class="water-progress">
          <div><span id="water-amount">0</span>ml / <span id="water-goal">2000</span>ml</div>
          <div class="progress-container" style="margin-top: 5px;">
            <div class="progress-bar" id="water-progress-bar" style="width: 0%"></div>
          </div>
        </div>
        <div class="water-buttons">
          <div class="water-button" onclick="addWater(250)">+250ml</div>
          <div class="water-button" onclick="addWater(500)">+500ml</div>
          <div class="water-button" onclick="addWater(1000)">+1L</div>
          <button class="btn-danger btn-sm" onclick="resetWater()">Reset</button>
        </div>
      </div>
    </section>
    
    <section class="section">
      <div class="section-header">
        <h2 class="section-title"><i class="fas fa-walking"></i> Step Counter</h2>
      </div>
      <div class="step-tracker">
        <div class="weight-form">
          <input type="number" id="step-input" placeholder="Enter steps">
          <button onclick="addSteps()">Add Steps</button>
        </div>
      </div>
    </section>
    
    <section class="section">
      <div class="section-header">
        <h2 class="section-title"><i class="fas fa-weight"></i> Weight Tracker</h2>
      </div>
      <div class="weight-form">
        <input type="number" id="weight-input" placeholder="Weight in kg" step="0.1">
        <button onclick="logWeight()">Log Weight</button>
      </div>
      <div class="chart-container">
        <canvas id="weight-chart"></canvas>
      </div>
      <table class="history-table">
        <thead>
          <tr>
            <th>Date</th>
            <th>Weight (kg)</th>
          </tr>
        </thead>
        <tbody id="weight-history">
        </tbody>
      </table>
    </section>
    
    <section class="section">
      <div class="section-header">
        <h2 class="section-title"><i class="fas fa-chart-line"></i> Nutrition History</h2>
      </div>
      <div class="chart-container">
        <canvas id="nutrition-chart"></canvas>
      </div>
    </section>
  </div>

  <script>
    // App Data
    let healthData = {
      currentDate: new Date().toISOString().split('T')[0],
      meals: {
        breakfast: [],
        lunch: [],
        dinner: [],
        snacks: []
      },
      water: 0,
      steps: 0,
      weightHistory: [],
      dailyGoals: {
        calories: 2000,
        water: 2000,
        steps: 10000
      }
    };
    
    // DOM Elements
    const currentDateEl = document.getElementById('current-date');
    const feedbackEl = document.getElementById('feedback-message');
    const feedbackTextEl = document.getElementById('feedback-text');
    
    // Initialize the app
    document.addEventListener('DOMContentLoaded', function() {
      loadData();
      updateDateDisplay();
      renderAll();
      updateFeedback();
    });
    
    // Date handling
    function updateDateDisplay() {
      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
      const displayDate = new Date(healthData.currentDate).toLocaleDateString('en-US', options);
      currentDateEl.textContent = displayDate;
    }
    
    // Data persistence
    function saveData() {
      localStorage.setItem('healthData', JSON.stringify(healthData));
    }
    
    function loadData() {
      const savedData = localStorage.getItem('healthData');
      if (savedData) {
        healthData = JSON.parse(savedData);
        
        // Ensure current date exists in data
        if (!healthData.meals[healthData.currentDate]) {
          healthData.meals[healthData.currentDate] = {
            breakfast: [],
            lunch: [],
            dinner: [],
            snacks: []
          };
        }
      }
    }
    
    // Food tracking
    function addFood(mealType) {
      const foodInput = document.getElementById(`${mealType}-food`);
      const caloriesInput = document.getElementById(`${mealType}-calories-input`);
      const proteinInput = document.getElementById(`${mealType}-protein`);
      const carbsInput = document.getElementById(`${mealType}-carbs`);
      const fatInput = document.getElementById(`${mealType}-fat`);
      
      if (!foodInput.value || !caloriesInput.value) {
        showFeedback('Please enter at least food name and calories', 'warning');
        return;
      }
      
      const newFood = {
        id: Date.now(),
        name: foodInput.value,
        calories: parseInt(caloriesInput.value),
        protein: parseInt(proteinInput.value) || 0,
        carbs: parseInt(carbsInput.value) || 0,
        fat: parseInt(fatInput.value) || 0,
        date: healthData.currentDate
      };
      
      healthData.meals[mealType].push(newFood);
      
      // Clear inputs
      foodInput.value = '';
      caloriesInput.value = '';
      proteinInput.value = '';
      carbsInput.value = '';
      fatInput.value = '';
      
      saveData();
      renderMeal(mealType);
      updateSummary();
      updateFeedback();
      showFeedback(`${newFood.name} added to ${mealType}`, 'success');
    }
    
    function deleteFood(mealType, foodId) {
      healthData.meals[mealType] = healthData.meals[mealType].filter(food => food.id !== foodId);
      saveData();
      renderMeal(mealType);
      updateSummary();
      updateFeedback();
    }
    
    function renderMeal(mealType) {
      const meal = healthData.meals[mealType];
      const mealList = document.getElementById(`${mealType}-list`);
      const mealCaloriesEl = document.getElementById(`${mealType}-calories`);
      
      // Calculate total calories for this meal
      const totalCalories = meal.reduce((sum, food) => sum + food.calories, 0);
      mealCaloriesEl.textContent = `${totalCalories} kcal`;
      
      // Render food items
      mealList.innerHTML = '';
      
      meal.forEach(food => {
        const foodItem = document.createElement('li');
        foodItem.className = 'food-item';
        foodItem.innerHTML = `
          <span class="food-name">$
